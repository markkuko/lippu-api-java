/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.0-SNAPSHOT).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package fi.ficora.lippu.server;

import org.threeten.bp.OffsetDateTime;
import fi.ficora.lippu.model.ProductQueryResponse;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import java.io.IOException;

import java.util.List;
import org.springframework.validation.annotation.Validated;
import javax.validation.constraints.*;
import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-09-05T15:09:31.417+03:00")

@Api(value = "products", description = "the products API")
public interface ProductsApi {

    @ApiOperation(value = "Tuotetarjonnan haku tietylle ajanhetkelle.", notes = "Palauttaa kuljetuspalvelun tuotetarjonnan annetulla ajanhetkellä. Koska tuotetarjonnat voivat muuttua ajan funktiona ja jotkin tuotteet voivat olla kausituotteita niin päivämäärä on aina osana hakuprosessia. Mikäli hakuparametri {date} jätetään antamatta, niin tällöin ajanhetkeksi oletetaan kyselyn ajanhetki.", response = ProductQueryResponse.class, tags={ "availability", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Palauttaa ajanhetkeen sopivat tuotekategoriat, sekä ne matkustajatyypit jotka ovat mahdollisia kyseisille tuotekategorioille.", response = ProductQueryResponse.class) })
    @RequestMapping(value = "/products/{date}",
        produces = { "application/json", "application/xml" }, 
        method = RequestMethod.GET)
    ResponseEntity<ProductQueryResponse> products(@ApiParam(value = "Yksilöivä viestitunniste, jota käytetään virhetilanteiden selvityksessä. Jokainen viestiä käsittelevä järjestelmä luo oman messageId-arvonsa" ,required=true) @RequestHeader(value="X-Message-Id", required=true) String xMessageId,@ApiParam(value = "Yksilöivä viestiketjutunniste, jota käytetään virhetilanteiden selvityksessä. Arvon määrittelee alkuperäinen kutsujataho ja se säilytetään läpi käsittelyprosessin." ,required=true) @RequestHeader(value="X-Transaction-Id", required=true) String xTransactionId,@ApiParam(value = "Tekstuaalinen tunniste siitä, että mikä järjestelmä on alunperin kutsun luonut. Käytetään virhetilanteiden selvityksessä." ,required=true) @RequestHeader(value="X-Initiator", required=true) String xInitiator,@ApiParam(value = "Kielivalinta kuten on määritelty [RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.4). Käytetään vastausviestin tekstuaalisten arvojen lokalisointiin." ,required=true) @RequestHeader(value="Accept-Language", required=true) String acceptLanguage,@ApiParam(value = "Päivämäärä, jolle validit tuotteet tulisi palauttaa. Mikäli parametria ei anneta, niin päivämääräksi oletetaan tämän hetkinen päivä.",required=true ) @PathVariable("date") OffsetDateTime date, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;

}
